\documentclass{beamer}
\usetheme{focus}
\usepackage[utf8]{inputenc}
\usepackage{polski}
\usepackage{amsfonts}
\usepackage{amsmath}
\usepackage{natbib}
\usepackage{graphicx}
\usepackage{array,booktabs,tabularx}
\usepackage{epstopdf}
\usepackage{colortbl, xcolor}
\usepackage{url}

\definecolor{main}{RGB}{74, 60, 137}
\definecolor{background}{RGB}{131, 219, 255}

\newcommand\Fontvi{\fontsize{6}{7.2}\selectfont}

\newcommand{\btVFill}{\vskip0pt plus 1filll}

\AtBeginSection[]
  {
    \ifnum \value{framenumber}>1
      \begin{frame}<beamer>
      \frametitle{Plan}
      \tableofcontents[currentsection]
      \end{frame}
    \else
    \fi
  }

\title{Full stack data science in R}
\date{}
\author{Michał Burdukiewicz}
\institute{MI$^2$ Data Lab, Politechnika Warszawska \\ Why R? Foundation}

\begin{document}


\maketitle

\begin{frame}{Plan prezentacji}

\tableofcontents

\end{frame} 

% co to jest full stack data science in R? 

% schemat procesu i na jakich elementach procesu się skupiam

\section{Akwizycja i przetwarzanie danych}

% skomasować do jednego slajdu

\begin{frame}{Akwizycja danych}

Import danych z różnych źródeł do obiektów \textbf{R} klasy \textit{data.frame} i podobnych (\textit{data.table}, \textit{tibble}).

\end{frame}

\begin{frame}{Dane w formacie tabelarycznym}

Pakiety: \texttt{readr}, \texttt{xlsx}.

\medskip

Szczególnie szybki: \texttt{data.table::fread()}

\end{frame}

\begin{frame}{Relacyjne bazy danych}

Przykładowe pakiety: \texttt{RPostgreSQL}, \texttt{mongolite}.

\end{frame}

%\begin{frame}{Grafowe bazy danych}
%
%Prace nad pakietem umożliwiającym łączenie się z neo4j poprzez driver Bolt wciaż trwają.
%
%\end{frame}

\begin{frame}{Przetwarzanie dużych danych}

Rodzina \texttt{bigmemory}: \texttt{biganalytics}, \texttt{synchronicity}, \texttt{bigalgebra}, and \texttt{bigtabulate}.

Szybkie przetwarzanie naprawdę dużych danych (za wyjątkiem rzadkich macierzy).

Inne rozwiązania: \texttt{ff}, \texttt{matter}.

\end{frame}

\begin{frame}{Przetwarzanie dużych danych}

% wyjaśnić narzut i wskazać najlepsze

<<echo=FALSE,results='asis'>>=
dat <- read.csv2("big.csv", header = FALSE)[,1:3]
colnames(dat) <- c("Użyte funkcje", "Użyta pamięć", "Narzut")
knitr::kable(dat, format = "latex", booktabs = TRUE) 
@


\end{frame}

\section{Tworzenie modelu}

\begin{frame}{mlr}

\texttt{mlr} - całościowy zbiór narzędzi do uczenia maszynowego w \textbf{R}.

\medskip

Alternatywy: \texttt{caret}, \texttt{parsnip}.

\end{frame}

%więcej przykładów tasków

\begin{frame}{mlr}
\begin{figure} 
\includegraphics[width=0.95\textwidth]{static_figure/mlr1.png}
\end{figure}
\end{frame}

\begin{frame}{mlr}
\begin{figure} 
\includegraphics[width=0.95\textwidth]{static_figure/mlr2.png}
\end{figure}
\end{frame}

\begin{frame}{mlr}
\begin{figure} 
\includegraphics[width=0.95\textwidth]{static_figure/mlr3.png}
\end{figure}
\end{frame}


\begin{frame}{Optymalizacja bayesowska}

Strategia poszukiwania optymalnej kombinacji hiperparametrów.

\end{frame}

\begin{frame}{Optymalizacja bayesowska}

\textbf{Przykład}: strojenie SVM z gaussowską funkcją jądra.

\medskip

Strojone hiperparametry:
\begin{enumerate}
\item C,
\item sigma.
\end{enumerate}

\end{frame}

\begin{frame}{Optymalizacja bayesowska}
\begin{figure} 
\includegraphics[width=0.95\textwidth]{static_figure/mbo.png}
\end{figure}
\end{frame}

\begin{frame}{Optymalizacja bayesowska}
\begin{figure} 
\includegraphics[width=0.95\textwidth]{static_figure/mbo3.png}
\end{figure}
\end{frame}

% porównywać data(mlrMBO) i grid search/random search - funkcja i titanic

\section{Udostępnianie modelu}

\begin{frame}{Shiny}

Łatwa konwersja narzędzi w \textbf{R} do aplikacji webowych.

\end{frame}


\begin{frame}{Shiny}

\begin{figure} 
\includegraphics[width=0.95\textwidth]{static_figure/shiny.png}
\end{figure}

\end{frame}

\begin{frame}{Shiny}

Ograniczenia:

\begin{enumerate}
\item Stabilność przy dużej liczbie użytkowników,
\item Szybkość.
\end{enumerate}

\end{frame}

\begin{frame}{ShinyProxy}

\texttt{ShinyProxy}: oparte na dockerze, stabilne i efektywne, ale wciąż wymagające serwera

\end{frame}

\begin{frame}{Shiny i Kubernetes}

Aplikacja Shiny w wydaniu serverless (Helm/ingress).

\end{frame}

\section{Reprodukowalne analizy}

\begin{frame}{drake}

\texttt{make} dla projektów w \textbf{R}.

\end{frame}

\begin{frame}{drake}

\begin{figure} 
\includegraphics[width=1.15\textwidth]{static_figure/drake2.png}
\end{figure}

\end{frame}

\begin{frame}{drake}

% dodać o superkomputerach

\begin{figure} 
\includegraphics[width=0.95\textwidth]{static_figure/drake1.png}
\end{figure}

\end{frame}

\begin{frame}{drake}

Zrównoleglanie obliczeń:

<<echo=TRUE,eval=FALSE,results='asis'>>=
make(plan, jobs = 12)
@

\end{frame}

\begin{frame}{Archivist}

\begin{figure} 
\includegraphics[width=0.95\textwidth]{static_figure/archivist.png}
\end{figure}

\small Przemysław Biecek i Marcin Kosiński
\end{frame}

## $MI^2$ Data Lab

MI$^2$ Data Lab (\url{https://mi2.mini.pw.edu.pl/}), Faculty of Mathematics and Computer Science, Warsaw University of Technology.

\begin{figure} 
\includegraphics[width=0.75\textwidth]{static_figure/mi2.png}
\end{figure}

Kontakt: \url{michalburdukiewicz@gmail.com}.

## Why R? 2019}

\begin{figure} 
\includegraphics[width=0.75\textwidth]{static_figure/europa.jpg}
\end{figure}

\end{frame}

\end{document}
